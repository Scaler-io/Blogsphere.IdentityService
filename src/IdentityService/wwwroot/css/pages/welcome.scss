@use "sass:color";
@use "../_colors" as colors;
@use "../_variables" as vars;
@use "../_mixins" as mixins;

.landing-page {
    // Hero section customizations
    .hero-section {
        background: linear-gradient(
            135deg,
            rgba(colors.$color-primary, 0.03) 0%,
            rgba(colors.$color-accent-yellow, 0.03) 100%
        );

        .display-4 {
            color: colors.$color-primary !important;
            font-size: calc(vars.$font-size-2xl * 1.5);
            font-weight: vars.$font-weight-bold;
            margin-bottom: vars.$spacing-md;
        }

        .lead {
            color: colors.$color-text-secondary !important;
            font-size: vars.$font-size-lg;
            font-weight: vars.$font-weight-normal;
            margin-bottom: vars.$spacing-xl;

            &.text-dark {
                color: colors.$color-text-primary !important;
            }
        }
    }

    // Section headings
    h2,
    h3,
    h4,
    h5 {
        color: colors.$color-primary !important;
        margin-bottom: vars.$spacing-md;

        &.text-primary {
            color: colors.$color-primary !important;
        }
    }

    // Custom button hover effects
    .btn-primary {
        @include mixins.button-primary;

        &:hover,
        &:focus,
        &:active {
            background-color: colors.$color-accent-yellow !important;
            border-color: colors.$color-accent-yellow !important;
            color: colors.$color-primary !important;
            transform: translateY(-1px);
        }
    }

    .btn-outline-primary {
        @include mixins.button-primary;
        background: transparent !important;
        color: colors.$color-primary !important;
        border: 2px solid colors.$color-primary !important;

        &:hover,
        &:focus,
        &:active {
            background-color: colors.$color-accent-yellow !important;
            border-color: colors.$color-accent-yellow !important;
            color: colors.$color-primary !important;
            transform: translateY(-1px);
        }
    }

    // Card customizations
    .card {
        @include mixins.card;
        transition: all vars.$transition-normal;
        padding: vars.$spacing-lg;

        &:hover {
            transform: translateY(-4px);
            box-shadow: vars.$shadow-lg;
        }

        .card-title {
            @include mixins.section-title;
            font-size: vars.$font-size-lg;
        }

        .card-text {
            color: colors.$color-text-secondary !important;
            font-size: vars.$font-size-sm;
            line-height: 1.6;
        }
    }

    // Quick access cards
    a.card {
        text-decoration: none !important;

        &:hover {
            background-color: rgba(colors.$color-accent-yellow, 0.1) !important;

            .card-title {
                color: colors.$color-primary !important;
            }
        }
    }

    // How it works section
    .bg-primary {
        @include mixins.gradient-background;
    }

    // Text color overrides
    .text-muted {
        color: colors.$color-text-secondary !important;
    }

    .text-primary {
        color: colors.$color-primary !important;
    }

    // Numbered circles in How It Works
    .rounded-circle {
        background-color: colors.$color-primary !important;
        width: 40px;
        height: 40px;
        @include mixins.flex-center;
        border-radius: 50%;
        margin-bottom: vars.$spacing-md;

        span {
            color: colors.$color-surface !important;
            font-size: vars.$font-size-md;
            font-weight: vars.$font-weight-bold;
        }
    }

    // Ensure SVG images maintain aspect ratio
    img {
        max-width: 100%;
        height: auto;
    }

    // Light background sections
    .bg-light {
        background: linear-gradient(
            135deg,
            rgba(colors.$color-primary, 0.02) 0%,
            rgba(colors.$color-accent-yellow, 0.02) 100%
        ) !important;
        padding: vars.$spacing-2xl 0;
    }
}
